" Don't try to be vi compatible
set nocompatible

" Helps force plugins to load correctly when it is turned back on below
filetype off

" TODO: Load plugins here (pathogen or vundle)

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'gabrielelana/vim-markdown'
Plugin 'godlygeek/tabular'
Plugin 'sjl/badwolf'
Plugin 'itchyny/lightline.vim'
Plugin 'tomtom/tcomment_vim'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'tweekmonster/startuptime.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-surround'
Plugin 'JamshedVesuna/vim-markdown-preview'
" Add multiple language syntax support
Plugin 'sheerun/vim-polyglot'
" Make f,F,t,T working in all lines
Plugin 'chrisbra/improvedft'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" Turn on syntax highlighting
syntax on

" For plugins to load correctly
"filetype plugin indent on 
"Commented as already setted before

"The Leader
let mapleader="\<Space>"

" Security
set modelines=0

" Show line numbers
set number

" Show file stats
set ruler

" Blink cursor on error instead of beeping (grr)
set visualbell

" Encoding
set encoding=utf-8

" Whitespace
set wrap
set textwidth=0
set formatoptions=tcqrn1
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set noshiftround

" Cursor motion
set scrolloff=3
set backspace=indent,eol,start
set matchpairs+=<:> " use % to jump between pairs
runtime! macros/matchit.vim

" Move up/down editor lines
nnoremap j gj
nnoremap k gk

" Allow hidden buffers
set hidden

" Rendering
set ttyfast

" Status bar
set laststatus=2

" Last line
set showmode
set showcmd

" Searching
nnoremap / /\v
vnoremap / /\v
set hlsearch
set incsearch
set ignorecase
set smartcase
set showmatch
""map <leader><space> :let @/=''<cr> " clear search

" Textmate holdouts

" Formatting
map <leader>q gqip

" Visualize tabs and newlines
set listchars=tab:â–¸\ ,eol:Â¬

" Uncomment this to enable by default:
" set list " To enable by default
" Or use your leader key + l to toggle on/off
map <leader>l :set list!<CR> " Toggle tabs and EOL

" Color scheme (terminal)
"set t_Co=256
"set background=dark
"let g:solarized_termcolors=256
"let g:solarized_termtrans=1
" put https://raw.github.com/altercation/vim-colors-solarized/master/colors/solarized.vim
" in ~/.vim/colors/ and uncomment:
" colorscheme solarized

" Command to copy to clipboard with ctrl+y / ctrl+p
" If using debian/ubuntu:
" To make this work be sure vim-gtk3 is installed
"
" If using manjaro:
" be sure to install gvim
nnoremap <C-y> "+y
vnoremap <C-y> "+y

" Enable mouse selection
set mouse=a

" This option allows you to use system clipboard directly
"set clipboard=unnamedplus

" Command to save read-only file 
command! W :execute ':silent w !sudo tee % > /dev/null' | :edit!

" ======================================================
" My personal commands

" Set Ctrl+s to save file only if there is a change to file
":nmap <c-s> :w<CR>
":imap <c-s> <Esc>:w<CR>a

"save current buffer
nnoremap <leader>w :up<cr>

"replace the word under cursor
nnoremap <leader>* :%s/\<<c-r><c-w>\>//g<left><left>

"autoclose tags
"inoremap ( ()<Left>
"inoremap { {}<Left>
"inoremap [ []<Left>
"inoremap " ""<Left>

"move lines around
nnoremap <leader>k :m-2<cr>==
nnoremap <leader>j :m+<cr>==
xnoremap <leader>k :m-2<cr>gv=gv
xnoremap <leader>j :m'>+<cr>gv=gv

" move lines around with alt+up alt+down
nnoremap [1;3A :m-2<cr>==
nnoremap [1;3B :m+<cr>==
xnoremap [1;3A :m-2<cr>gv=gv
xnoremap [1;3B :m'>+<cr>gv=gv

"quit if file was saved
nnoremap <leader>q :q<cr>

"modifiedflag, charcount, filepercent, filepath
set statusline=%=%m\ %c\ %P\ %f

"a better menu in command mode
set wildmenu
set wildmode=longest:full,full

" let g:netrw_banner=0
" let g:netrw_winsize=20
" let g:netrw_liststyle=3
" let g:netrw_localrmdir='rm -r'

"toggle netrw on the left side of the editor
" nnoremap <leader>n :Lexplore<CR>

"clear highlight search with leader twice
nnoremap <Leader><space> :noh<cr>

" Setup delek colorscheme
""colorscheme delek

"Change color of vim statusbar to cyan with black chars
""hi StatusLine ctermbg=black ctermfg=cyan

"Set badwolf as colorscheme
color badwolf

" Select all with leader a
nnoremap <Leader>a ggVG<cr>

" Select all and copy to clipboard+
nnoremap <Leader>v ggVG"+y<cr>

let vim_markdown_preview_hotkey='<C-m>'
let vim_markdown_preview_pandoc=1

" This command preserve vim system clipboard at logout
" Beware xclip is installed for this to work
autocmd VimLeave * call system("xclip -selection clipboard -i", getreg('+'))

" Count numbers of ocurrences under cursor
map ,* *<C-O>:%s///gn<CR>

" Stop vim from auto entering at 80 char
set linebreak
set nolist

" Stop accidently hitting q:
nnoremap q: :q

"Space + e refresh file
map <leader>e :e<cr>
